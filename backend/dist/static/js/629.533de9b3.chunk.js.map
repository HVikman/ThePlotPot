{"version":3,"file":"static/js/629.533de9b3.chunk.js","mappings":"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","sources":["pages/newstory/AddChapter.jsx","hooks/createChapter.js","utils/charactercounter.js"],"sourcesContent":["import { useLocation } from 'react-router-dom'\r\nimport { useFormik } from 'formik'\r\nimport * as Yup from 'yup'\r\nimport { Form, FormControl, Button } from 'react-bootstrap'\r\nimport ReactQuill from 'react-quill'\r\nimport 'quill/dist/quill.snow.css'\r\nimport '../../utils/charactercounter'\r\nimport { useCreateChapter } from '../../hooks/createChapter'\r\nimport { useNotifications } from '../../components/NotificationsContext'\r\nimport './quill.css'\r\nimport { useDarkMode } from '../../components/DarkModeContext'\r\nimport '../../utils/theme.css'\r\n// Quill modules\r\nconst quillModules = {\r\n  characterCounter: {\r\n    container: '#char-count',\r\n    maxChars: 12000\r\n  },\r\n  toolbar: [\r\n    [{ 'header': [1, 2, 3, false] }],\r\n    ['bold', 'italic', 'underline', 'blockquote'],\r\n    [{ 'list': 'ordered' }, { 'list': 'bullet' }],\r\n  ]\r\n}\r\n\r\n// Form validation schema\r\nconst validationSchema = Yup.object({\r\n  title: Yup.string()\r\n    .required('Required')\r\n    .max(100, 'Must be 100 characters or less'),\r\n  content: Yup.string()\r\n    .required('Required')\r\n    .max(12000, 'Content must be 12000 characters or less'),\r\n})\r\n\r\nconst initialValues = {\r\n  title: '',\r\n  content: '',\r\n  honeypot: ''\r\n}\r\n\r\nconst AddChapter = () => {\r\n  const { isDarkMode } = useDarkMode()\r\n  const location = useLocation()\r\n  const { storyId, parentChapter, navigationStack } = location.state\r\n  const { addNotification } = useNotifications()\r\n  const [createChapter] = useCreateChapter(storyId, parentChapter, navigationStack, addNotification)\r\n\r\n  const formik = useFormik({\r\n    initialValues,\r\n    validationSchema,\r\n    onSubmit: (values) => {\r\n      if (values.honeypot) {\r\n        console.log('Bot detected')\r\n        return\r\n      }\r\n      createChapter({\r\n        variables: {\r\n          storyId: storyId,\r\n          parentChapterId: parentChapter.id,\r\n          branch: parentChapter.branch + 1,\r\n          title: values.title,\r\n          content: values.content,\r\n        }\r\n      }).catch(error => {\r\n        console.error('There was an error creating the chapter:', error)\r\n        addNotification(error.message, 3000, 'error')\r\n      })\r\n    },\r\n  })\r\n\r\n  return (\r\n    <div className=\"add-chapter-container mx-4\">\r\n      <h2>Add a New Chapter</h2>\r\n      <Form onSubmit={formik.handleSubmit} className={`${isDarkMode ? 'dark-mode' : 'light-mode'}`}>\r\n        <Form.Group controlId=\"formTitle\">\r\n          <Form.Label>Title</Form.Label>\r\n          <FormControl\r\n            type=\"text\"\r\n            placeholder=\"Chapter title\"\r\n            name=\"title\"\r\n            onChange={formik.handleChange}\r\n            onBlur={formik.handleBlur}\r\n            value={formik.values.title}\r\n          />\r\n          {formik.touched.title && formik.errors.title && (\r\n            <Form.Text className=\"text-danger\">{formik.errors.title}</Form.Text>\r\n          )}\r\n        </Form.Group>\r\n\r\n        <Form.Group controlId=\"formHoneypot\">\r\n          <FormControl\r\n            type=\"text\"\r\n            name=\"honeypot\"\r\n            onChange={formik.handleChange}\r\n            onBlur={formik.handleBlur}\r\n            value={formik.values.honeypot}\r\n            style={{ display: 'none' }}\r\n          />\r\n        </Form.Group>\r\n\r\n        <Form.Group controlId=\"formContent\">\r\n          <Form.Label>Content</Form.Label>\r\n          <ReactQuill\r\n            value={formik.values.content}\r\n            placeholder='Chapter content goes here...'\r\n            onChange={value => formik.setFieldValue('content', value)}\r\n            onBlur={() => formik.setFieldTouched('content', true)}\r\n            theme=\"snow\"\r\n            modules={quillModules}\r\n          />\r\n          {formik.touched.content && formik.errors.content && (\r\n            <Form.Text className=\"text-danger\">{formik.errors.content}</Form.Text>\r\n          )}\r\n          <div id='char-count'></div>\r\n        </Form.Group>\r\n\r\n        <Button variant='secondary' type=\"submit\">Submit</Button>\r\n      </Form>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default AddChapter\r\n","import { useMutation } from '@apollo/client'\r\nimport { CREATE_CHAPTER, GET_STORY_BY_ID, GET_CHAPTER_CHILDREN } from '../api/queries'\r\nimport { useNavigate } from 'react-router-dom'\r\n\r\nexport const useCreateChapter = (storyId, parentChapter, navigationStack, addNotification) => {\r\n  const navigate = useNavigate()\r\n\r\n  const [createChapter, { error }] = useMutation(CREATE_CHAPTER, {\r\n    update: (cache, { data: { createChapter } }) => {\r\n      try {\r\n        const { getStory } = cache.readQuery({\r\n          query: GET_STORY_BY_ID,\r\n          variables: { id: storyId }\r\n        })\r\n\r\n        const updatedChapters = [...getStory.chapters, createChapter]\r\n\r\n        cache.writeQuery({\r\n          query: GET_STORY_BY_ID,\r\n          variables: { id: storyId },\r\n          data: {\r\n            getStory: {\r\n              ...getStory,\r\n              chapters: updatedChapters\r\n            }\r\n          }\r\n        })\r\n\r\n        const { getChapterChildren } = cache.readQuery({\r\n          query: GET_CHAPTER_CHILDREN,\r\n          variables: { id: parentChapter.id }\r\n        })\r\n\r\n        const updatedChildren = [...getChapterChildren, createChapter]\r\n\r\n        cache.writeQuery({\r\n          query: GET_CHAPTER_CHILDREN,\r\n          variables: { id: parentChapter.id },\r\n          data: {\r\n            getChapterChildren: updatedChildren\r\n          }\r\n        })\r\n        addNotification(`${createChapter.title} created successfully!`, 2000, 'success')\r\n        console.log(createChapter)\r\n        navigate(`/story/${storyId}`, {\r\n          state: {\r\n            chapter: createChapter,\r\n            navigationStack: [...navigationStack, parentChapter]\r\n          }\r\n        })\r\n      } catch (error) {\r\n        console.error('Error updating cache after adding chapter:', error)\r\n        addNotification(error.message, 2000, 'error')\r\n      }\r\n    }\r\n  })\r\n\r\n  return [createChapter, error]\r\n}","import Quill from 'quill'\r\n\r\nclass CharacterCounter {\r\n  constructor(quill, options) {\r\n    this.quill = quill\r\n    this.options = options\r\n    this.container = document.querySelector(options.container)\r\n\r\n    quill.on('text-change', this.update.bind(this))\r\n    this.update()\r\n  }\r\n\r\n  calculate() {\r\n    let text = this.quill.getText()\r\n    return text.length -1\r\n  }\r\n\r\n  update() {\r\n    let charCount = this.calculate()\r\n    if (charCount > this.options.maxChars) {\r\n      let currentText = this.quill.getText()\r\n      let newText = currentText.substring(0, this.options.maxChars)\r\n      this.quill.setText(newText)\r\n    }\r\n    this.container.innerText = charCount + ' / ' + this.options.maxChars\r\n  }\r\n}\r\n\r\nQuill.register('modules/characterCounter', CharacterCounter)\r\n\r\nexport default CharacterCounter\r\n"],"names":["quillModules","characterCounter","container","maxChars","toolbar","validationSchema","Yup","title","required","max","content","initialValues","honeypot","AddChapter","isDarkMode","useDarkMode","location","useLocation","storyId","parentChapter","navigationStack","state","addNotification","useNotifications","createChapter","useCreateChapter","navigate","useNavigate","error","useMutation","CREATE_CHAPTER","update","cache","_ref","data","getStory","readQuery","query","GET_STORY_BY_ID","variables","id","updatedChapters","chapters","writeQuery","getChapterChildren","GET_CHAPTER_CHILDREN","updatedChildren","concat","console","log","chapter","message","formik","useFormik","onSubmit","values","parentChapterId","branch","catch","_jsxs","className","children","_jsx","Form","handleSubmit","Group","controlId","Label","FormControl","type","placeholder","name","onChange","handleChange","onBlur","handleBlur","value","touched","errors","Text","style","display","ReactQuill","setFieldValue","setFieldTouched","theme","modules","Button","variant","CharacterCounter","constructor","quill","options","this","document","querySelector","on","bind","calculate","getText","length","charCount","newText","substring","setText","innerText","Quill"],"sourceRoot":""}