{"version":3,"file":"static/js/59.f02abb74.chunk.js","mappings":"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","sources":["components/Error.jsx","pages/storypage/CommentCard.jsx","pages/storypage/AddComment.jsx","pages/storypage/Comments.jsx","pages/storypage/Chapter.jsx","hooks/likes.js","pages/storypage/Loading.jsx","pages/storypage/StoryPage.jsx"],"sourcesContent":["import React from 'react'\r\nimport { Container, Alert, Button } from 'react-bootstrap'\r\n\r\nconst ErrorComponent = ({ message, onRetry }) => {\r\n  return (\r\n    <Container className=\"mt-5\">\r\n      <Alert variant=\"danger\">\r\n        <Alert.Heading>Oh snap! An error occurred.</Alert.Heading>\r\n        <p>{message || 'Something went wrong. Please try again later.'}</p>\r\n        {onRetry && <Button variant=\"primary\" onClick={onRetry}>Retry</Button>}\r\n      </Alert>\r\n    </Container>\r\n  )\r\n}\r\n\r\nexport default ErrorComponent","import React from 'react'\r\nimport { Card, Row, Col, Button } from 'react-bootstrap'\r\nimport { Popconfirm } from 'antd'\r\nimport { Link } from 'react-router-dom'\r\nimport { useMutation } from '@apollo/client'\r\nimport { DELETE_COMMENT } from '../../api/queries'\r\nimport { useNotifications } from '../../components/NotificationsContext'\r\nimport { useDarkMode } from '../../components/DarkModeContext'\r\n\r\nconst CommentCard = ({ comment, user, deleteComment }) => {\r\n  const { addNotification } = useNotifications()\r\n  const [delComment] = useMutation(DELETE_COMMENT)\r\n  const { isDarkMode } = useDarkMode()\r\n  const confirm = async () => {\r\n    try {\r\n      const { data } = await delComment({\r\n        variables: {\r\n          commentId: comment.id\r\n        }\r\n      })\r\n      console.log(data)\r\n      deleteComment(comment.id)\r\n      addNotification('Comment deleted successfully!', 3000, 'success')\r\n    } catch (error) {\r\n      console.error('There was an error deleting the comment:', error)\r\n      addNotification(error.message, 3000, 'error')\r\n    }\r\n  }\r\n\r\n\r\n  return (\r\n    <Card className={`shadow mt-3 ${isDarkMode ? 'dark-mode' : 'light-mode'}`}>\r\n      <Card.Body >\r\n        <Row>\r\n          <Col xs={3} md={1}>\r\n            <img\r\n              src={`https://www.gravatar.com/avatar/${comment.user.email}?s=400&d=robohash`}\r\n              className=\"img-fluid rounded-circle\"\r\n              alt=\"User Gravatar\"\r\n            />\r\n          </Col>\r\n          <Col xs={8} md={10}>\r\n            <Card.Title><Link style={{ color: 'inherit', textDecoration: 'inherit' }} to={`/user/${comment.user.id}`}>{comment.user.username}</Link></Card.Title>\r\n            <Card.Text>{comment.content}</Card.Text>\r\n          </Col>\r\n          <Col xs={1} md={1} className=\"d-flex align-items-start justify-content-end\">\r\n            {user && (\r\n              <>\r\n                {user.id === comment.user.id && (\r\n                  <Popconfirm\r\n                    title=\"Delete your comment?\"\r\n                    description=\"Are you sure you want to delete your comment?\"\r\n                    onConfirm={confirm}\r\n                    okText=\"Yes\"\r\n                    cancelText=\"No\"\r\n                  >\r\n                    <Button variant=\"danger\">Delete</Button>\r\n                  </Popconfirm>\r\n                )}\r\n\r\n                {user.has_superpowers && (\r\n                  <Popconfirm\r\n                    title=\"Admin Delete\"\r\n                    description=\"Are you sure you want to delete this user's comment as an admin?\"\r\n                    onConfirm={confirm}\r\n                    okText=\"Yes\"\r\n                    cancelText=\"No\"\r\n                  >\r\n                    <Button variant=\"warning\">Admin Delete</Button>\r\n                  </Popconfirm>\r\n                )}\r\n              </>\r\n            )}\r\n          </Col>\r\n        </Row>\r\n      </Card.Body>\r\n    </Card>\r\n  )\r\n}\r\n\r\nexport default CommentCard\r\n","import { useFormik } from 'formik'\r\nimport * as Yup from 'yup'\r\nimport { Form, Button } from 'react-bootstrap'\r\nimport { useNotifications } from '../../components/NotificationsContext'\r\nimport { useMutation } from '@apollo/client'\r\nimport { ADD_COMMENT_MUTATION } from '../../api/queries'\r\n\r\nconst validationSchema = Yup.object({\r\n  content: Yup.string()\r\n    .required('Required')\r\n    .min(10, 'Comment must be atleast 10 characters')\r\n    .max(1000, 'Must be 1000 characters or less')\r\n})\r\n\r\nconst initialValues = {\r\n  content: '',\r\n  honeypot: ''\r\n}\r\n\r\nconst AddCommentForm = ({ chapterId, addNewComment }) => {\r\n  const { addNotification } = useNotifications()\r\n\r\n  const [addComment] = useMutation(ADD_COMMENT_MUTATION)\r\n\r\n  const formik = useFormik({\r\n    initialValues,\r\n    validationSchema,\r\n    onSubmit: async (values) => {\r\n      console.log(chapterId)\r\n      if (values.honeypot) {\r\n        console.log('Bot detected')\r\n        return\r\n      }\r\n      // eslint-disable-next-line no-undef\r\n      grecaptcha.ready(async () => {\r\n        // eslint-disable-next-line no-undef\r\n        const token = await grecaptcha.execute('6LfY0fooAAAAAKaljIbo723ZiMGApMCVg6ZU805o', { action: 'submit' })\r\n\r\n\r\n        try {\r\n\r\n          const { data } = await addComment({\r\n            variables: {\r\n              Input: {\r\n                content: values.content,\r\n                chapterId\r\n              },\r\n              token: token\r\n            }\r\n          })\r\n\r\n          addNewComment(data.addComment)\r\n          addNotification('Comment added successfully!', 3000, 'success')\r\n          formik.resetForm()\r\n        } catch (error) {\r\n          console.error('There was an error adding the comment:', error)\r\n          addNotification(error.message, 3000, 'error')\r\n        }})\r\n    },\r\n  })\r\n\r\n  return (\r\n    <div className=\"add-comment-container mt-3\">\r\n      <h2>Add a Comment</h2>\r\n      <Form onSubmit={formik.handleSubmit}>\r\n\r\n        <Form.Group controlId=\"commentContent\" className='my-2 custom-form'>\r\n          <Form.Control\r\n            as=\"textarea\"\r\n            name=\"content\"\r\n            placeholder=\"Your comment...\"\r\n            onChange={formik.handleChange}\r\n            onBlur={formik.handleBlur}\r\n            value={formik.values.content}\r\n            isInvalid={formik.touched.content && formik.errors.content}\r\n          />\r\n          <Form.Control.Feedback type=\"invalid\">\r\n            {formik.errors.content}\r\n          </Form.Control.Feedback>\r\n        </Form.Group>\r\n\r\n        <Form.Control style={{ display: 'none' }} name=\"honeypot\" onChange={formik.handleChange} value={formik.values.honeypot} />\r\n\r\n        <Button variant=\"secondary\" type=\"submit\">Submit</Button>\r\n      </Form>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default AddCommentForm\r\n","import { useState } from 'react'\r\nimport { Container } from 'react-bootstrap'\r\nimport CommentCard from './CommentCard'\r\nimport AddCommentForm from './AddComment'\r\nimport { useAuth } from '../auth/AuthContext'\r\n\r\nconst Comments = ({ comments: initialComments, chapterId }) => {\r\n  const { user } = useAuth()\r\n  const isAuthenticated = !!user\r\n  const [comments, setComments] = useState(initialComments)\r\n\r\n  const addNewComment = (newComment) => {\r\n    setComments(prevComments => [...prevComments, newComment])\r\n  }\r\n  const deleteComment = (commentId) => {\r\n    setComments(prevComments => prevComments.filter(comment => comment.id !== commentId))\r\n  }\r\n\r\n  return (\r\n\r\n    <Container fluid className='my-4 py-2'>\r\n      <h1>Comments</h1>\r\n      {}\r\n      {comments && comments.length > 0 ? comments.map(comment => (\r\n        <CommentCard key={comment.id} comment={comment} user={user} deleteComment={deleteComment} />\r\n      )): isAuthenticated ? <p>No comments yet, be first to comment!</p> : <p>No comments yet, <a href=\"/login\">login</a> or <a href=\"/signup\">signup</a> to comment!</p>}{isAuthenticated && <AddCommentForm chapterId={chapterId} addNewComment={addNewComment} />}\r\n    </Container>\r\n  )\r\n}\r\n\r\nexport default Comments\r\n","import { useState, useEffect } from 'react'\r\nimport DOMPurify from 'dompurify'\r\nimport './chapter.css'\r\nimport { Button } from 'react-bootstrap'\r\nimport { useAuth } from '../auth/AuthContext'\r\nimport { ArrowLeft, HandThumbsUpFill } from 'react-bootstrap-icons'\r\nimport { useLikeUnlikeChapter, useIsChapterLiked } from '../../hooks/likes'\r\nimport Comments from './Comments'\r\nimport { Popconfirm } from 'antd'\r\nimport { useMutation } from '@apollo/client'\r\nimport { DELETE_CHAPTER, DELETE_STORY } from '../../api/queries'\r\nimport { useNavigate } from 'react-router-dom'\r\nimport { useNotifications } from '../../components/NotificationsContext'\r\nimport { useDarkMode } from '../../components/DarkModeContext'\r\nimport '../../utils/theme.css'\r\n\r\nconst Chapter = ({ chapter, childChapters, onNavigate, onAddChapter, onGoBack, isLoading }) => {\r\n  const { addNotification } = useNotifications()\r\n  const navigate = useNavigate()\r\n  const [deleteChapter] = useMutation(DELETE_CHAPTER)\r\n  const [deleteStory] = useMutation(DELETE_STORY)\r\n  const [isLiked, setIsLiked] = useState(null)\r\n  const [isDisabled, setIsDisabled] = useState(false)\r\n  const { isDarkMode } = useDarkMode()\r\n\r\n  const initialIsLiked = useIsChapterLiked(chapter.id)\r\n  useEffect(() => {\r\n    setIsLiked(initialIsLiked)\r\n  }, [initialIsLiked])\r\n\r\n  const toggleLikeUnlike = useLikeUnlikeChapter()\r\n\r\n  const handleButton = async () => {\r\n    setIsDisabled(true)\r\n\r\n    if (!isLiked) {\r\n      const result = await toggleLikeUnlike(true, chapter.id)\r\n      chapter.votes_count = chapter.votes_count + 1\r\n      setIsLiked(true)\r\n      console.log('Like result:', result)}\r\n    else {const result = await toggleLikeUnlike(false, chapter.id)\r\n      setIsLiked(false)\r\n      chapter.votes_count = chapter.votes_count- 1\r\n      console.log('Unlike result:', result)}\r\n\r\n    setTimeout(() => {\r\n      setIsDisabled(false)\r\n    }, 1000)\r\n  }\r\n  const handleDelete = async () => {\r\n    console.log(chapter)\r\n    try {\r\n      if (chapter.branch === 0) {\r\n        const response = await deleteStory({\r\n          variables: { id: chapter.story.id }\r\n        })\r\n\r\n        if (response.data.deleteStory.success) {\r\n          addNotification(response.data.deleteStory.message, 3000, 'success')\r\n          navigate('/')\r\n          console.log('Story deleted successfully')\r\n        } else {\r\n          console.error(response.data.deleteStory.message)\r\n          addNotification(response.data.deleteStory.message, 3000, 'error')\r\n        }\r\n\r\n      } else {\r\n        const response = await deleteChapter({\r\n          variables: { id: chapter.id }\r\n        })\r\n\r\n        if (response.data.deleteChapter.success) {\r\n          addNotification(response.data.deleteChapter.message, 3000, 'success')\r\n          navigate('/')\r\n          console.log('Chapter deleted successfully')\r\n        } else {\r\n          console.error(response.data.deleteChapter.message)\r\n          addNotification(response.data.deleteChapter.message, 3000, 'error')\r\n        }\r\n      }\r\n    } catch (error) {\r\n      console.error('Error deleting:', error)\r\n    }\r\n  }\r\n\r\n\r\n\r\n  const { user } = useAuth()\r\n  const isAuthenticated = !!user\r\n  const sanitizedHTML = DOMPurify.sanitize(chapter.content)\r\n\r\n  return (\r\n    <div className=\"chapter\">\r\n\r\n      <Button variant='secondary' className=\"mb-3\" onClick={() => onGoBack()}>\r\n        < ArrowLeft />\r\n      </Button>\r\n      <div className={`chapter-content shadow my-2 ${isDarkMode ? 'dark-mode' : 'light-mode'}`} dangerouslySetInnerHTML={{ __html: sanitizedHTML }} />\r\n      <div className=\"chapter-stats m-2\">\r\n        {\r\n          isAuthenticated ? (\r\n            user.id === chapter.author.id ? ( childChapters.length === 0 ?\r\n              <>\r\n                <Popconfirm\r\n                  title={chapter.branch === 0 ?'Delete story' : 'Delete chapter'}\r\n                  description={chapter.branch === 0 ? 'Are you sure you want to delete this story': 'Are you sure you want to delete this chapter'}\r\n                  onConfirm={handleDelete}\r\n                  okText='Yes'\r\n                  cancelText='No'\r\n                >\r\n                  <Button variant='danger'>Delete</Button>\r\n                </Popconfirm><span>Likes:</span></>\r\n              : <span>Likes: </span>) : (\r\n              <Button\r\n                disabled={isDisabled}\r\n                variant={isLiked ? 'success' : 'secondary'}\r\n                className=\"mt-2\"\r\n                onClick={() => handleButton()}\r\n              >\r\n                <HandThumbsUpFill />\r\n              </Button>\r\n            )\r\n          ) : (\r\n            <span>Likes:</span>\r\n          )\r\n        }\r\n        {user ? user.has_superpowers && <Popconfirm\r\n          title={chapter.branch === 0 ?'Delete story' : 'Delete chapter'}\r\n          description={chapter.branch === 0 ? 'Are you sure you want to delete this story': 'Are you sure you want to delete this chapter'}\r\n          onConfirm={handleDelete}\r\n          okText='Yes'\r\n          cancelText='No'\r\n        >\r\n          <Button variant='danger'>Admin delete</Button>\r\n        </Popconfirm> : <></>}\r\n        <span>{chapter.votes_count}</span>\r\n      </div>\r\n      <div className=\"next-chapters m-2\">\r\n        {!isLoading && isAuthenticated && childChapters.length < 3 && chapter.branch < 9 && (\r\n          <Button variant='secondary' className=\"mr-3 mt-2\" onClick={() => onAddChapter()}>Add Chapter</Button>\r\n        )}\r\n        {childChapters.map(child => (\r\n          <Button variant='secondary' className=\"mr-3 mt-2\" key={child.id} onClick={() => onNavigate(child.id)}>\r\n            Continue to: {child.title}\r\n          </Button>\r\n        ))}\r\n\r\n      </div>\r\n      <Comments key={chapter.id} comments={chapter.comments} chapterId={chapter.id}/>\r\n\r\n\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Chapter\r\n","import { useQuery, useMutation } from '@apollo/client'\r\nimport { LIKE_CHAPTER, IS_CHAPTER_LIKED, UNLIKE_CHAPTER } from '../api/queries'\r\nimport { useNotifications } from '../components/NotificationsContext'\r\n\r\nexport const useIsChapterLiked = (id) => {\r\n  const { data } = useQuery(IS_CHAPTER_LIKED, {\r\n    variables: { id }\r\n  })\r\n\r\n  return data ? data.isChapterLiked : false\r\n}\r\n\r\n\r\nexport const useLikeUnlikeChapter = () => {\r\n  const { addNotification } = useNotifications()\r\n  const [likeChapterMutation] = useMutation(LIKE_CHAPTER)\r\n  const [unlikeChapterMutation] = useMutation(UNLIKE_CHAPTER)\r\n\r\n  const toggleLikeUnlike = async (like, id) => {\r\n    if (like) {\r\n      const { data } = await likeChapterMutation({ variables: { id } })\r\n      addNotification('Chapter liked', 1000, 'success')\r\n      return data.likeChapter\r\n    } else {\r\n      const { data } = await unlikeChapterMutation({ variables: { id } })\r\n      addNotification('Like removed', 1000, 'error')\r\n      return data.unlikeChapter\r\n    }\r\n  }\r\n\r\n  return toggleLikeUnlike\r\n}\r\n","import { Spin } from 'antd'\r\nimport { Card } from 'react-bootstrap'\r\nimport { useDarkMode } from '../../components/DarkModeContext'\r\nimport '../../utils/theme.css'\r\n\r\nconst loadingTexts = [\r\n  'Your epic saga is so vast, even our scrolls are taking a while. Hang tight!',\r\n  'Your tale\\'s intrigue has our library elves on their toes. One moment!',\r\n  'Such a legendary story requires some extra ink and quill. Bear with us...',\r\n  'Even the grand storytellers of old would be impressed! Prepping your narrative...',\r\n  'Your chapters are so gripping, our books needed a breather. Stay tuned...',\r\n  'Paging all scribes! Your monumental tale is on the way...',\r\n  'Even our magic mirrors need a second to capture the grandeur of your plot. Patience!',\r\n  'Your story has so many layers, even the onions are jealous. Peeling back the pages...',\r\n  'With tales as epic as yours, even the stars stop to listen. Setting the stage...',\r\n  'Weaving tales this intricate takes a touch of sorcery. Conjuring your story...'\r\n]\r\n\r\nconst getRandomLoadingText = () => {\r\n  return loadingTexts[Math.floor(Math.random() * loadingTexts.length)]\r\n}\r\n\r\nconst LoadingComponent = () => {\r\n  const { isDarkMode } = useDarkMode()\r\n  return (\r\n    <div style={{ display: 'flex', justifyContent: 'center', alignItems: 'center', height: '80vh' }}>\r\n      <Card style={{ width: '300px', textAlign: 'center' }} className={`shadow ${isDarkMode ? 'dark-mode' : 'light-mode'}`}>\r\n        <Card.Body >\r\n          <Spin size=\"large\" className='my-3' />\r\n          <Card.Title>Fetching the Story...</Card.Title>\r\n          <Card.Text>\r\n            {getRandomLoadingText()}\r\n          </Card.Text>\r\n        </Card.Body>\r\n      </Card>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default LoadingComponent","import { useState, useEffect } from 'react'\r\nimport { useQuery, useLazyQuery } from '@apollo/client'\r\nimport { useNavigate, useParams, useLocation, Link } from 'react-router-dom'\r\nimport Chapter from './Chapter'\r\nimport { Container, Row, Col, Card } from 'react-bootstrap'\r\nimport { GET_STORY_BY_ID, GET_CHAPTER_CHILDREN, GET_CHAPTER } from '../../api/queries'\r\nimport LoadingComponent from './Loading'\r\nimport ErrorComponent from '../../components/Error'\r\nimport { useDarkMode } from '../../components/DarkModeContext'\r\n\r\nconst StoryPage = () => {\r\n  const { isDarkMode } = useDarkMode()\r\n  const navigate = useNavigate()\r\n  const { storyId, chapterId } = useParams()\r\n\r\n  //GraphQL queries\r\n  const { data, loading, error } = useQuery(GET_STORY_BY_ID, {\r\n    variables: { id: storyId, chapterId },\r\n  })\r\n  const [getChildChapters, { data: childChaptersData, loading: childChaptersLoading }] = useLazyQuery(GET_CHAPTER_CHILDREN)\r\n  const [getParentChapter, { data: parentChapterData }] = useLazyQuery(GET_CHAPTER)\r\n\r\n  const location = useLocation()\r\n  const { chapter, navigationStack: newNavigationStack } = location.state || {}\r\n\r\n  const [currentChapter, setCurrentChapter] = useState(null)\r\n  const [navigationStack, setNavigationStack] = useState([])\r\n\r\n  useEffect(() => {\r\n    if (chapter) {\r\n      setCurrentChapter(chapter)\r\n      window.history.replaceState(null, '', `/story/${storyId}/chapter/${chapter.id}`)\r\n      if (newNavigationStack) {\r\n        setNavigationStack(newNavigationStack)\r\n      }\r\n    } else if (data && data.getStory && data.getStory.chapters) {\r\n      setCurrentChapter(data.getStory.chapters[0])\r\n    }\r\n  }, [chapter, data, newNavigationStack, storyId])\r\n  useEffect(() => {\r\n    if (currentChapter) {\r\n      getChildChapters({ variables: { id: currentChapter.id } })\r\n    }\r\n  }, [currentChapter, getChildChapters])\r\n  useEffect(() => {\r\n    if (parentChapterData && parentChapterData.getChapter) {\r\n      setCurrentChapter(parentChapterData.getChapter)\r\n      window.history.replaceState(null, '', `/story/${storyId}/chapter/${parentChapterData.getChapter.id}`)\r\n    }\r\n  }, [parentChapterData, storyId])\r\n\r\n  if (loading) return <LoadingComponent />\r\n  if (error) return <ErrorComponent message={error.message} />\r\n\r\n  const navigateToChapter = (chapterId) => {\r\n    let chaptersArray\r\n\r\n    if (childChaptersData && childChaptersData.getChapterChildren) {\r\n      chaptersArray = childChaptersData.getChapterChildren\r\n    } else if (data && data.getStory && Array.isArray(data.getStory.chapters)) {\r\n      chaptersArray = data.getStory.chapters\r\n    }\r\n    window.scrollTo({ top: 0, behavior: 'smooth' })\r\n    setNavigationStack([...navigationStack, currentChapter])\r\n    const selectedChapter = chaptersArray.find(chapter => chapter.id === chapterId)\r\n    if (!selectedChapter) {\r\n      console.log('Chapter not found with the given ID:', chapterId)\r\n      return\r\n    }\r\n    setCurrentChapter(selectedChapter)\r\n    window.history.replaceState(null, '', `/story/${storyId}/chapter/${selectedChapter.id}`)\r\n    getChildChapters({ variables: { id: selectedChapter.id } })\r\n  }\r\n\r\n  const goBack = () => {\r\n    const lastChapter = navigationStack.pop()\r\n    window.scrollTo({ top: 0, behavior: 'smooth' })\r\n    console.log(currentChapter)\r\n    setNavigationStack([...navigationStack])\r\n    if (lastChapter) {\r\n      setCurrentChapter(lastChapter)\r\n      window.history.replaceState(null, '', `/story/${storyId}/chapter/${lastChapter.id}`)\r\n    } else if (currentChapter && currentChapter.parentChapterId) {\r\n      getParentChapter({ variables: { getChapterId: currentChapter.parentChapterId } })\r\n    } else {\r\n      navigate('/')\r\n    }\r\n  }\r\n\r\n  const handleAddChapter = ( ) => {\r\n    navigate('/add-chapter', {\r\n      state: {\r\n        storyId: storyId,\r\n        parentChapter: currentChapter,\r\n        navigationStack: navigationStack\r\n      }\r\n    })\r\n  }\r\n\r\n  return (\r\n    <Container className=\"mt-5\">\r\n      <Row>\r\n        <Col md={9}>\r\n          {currentChapter && (\r\n            <Chapter\r\n              chapter={currentChapter}\r\n              childChapters={childChaptersData ? childChaptersData.getChapterChildren : []}\r\n              onNavigate={navigateToChapter}\r\n              onAddChapter={handleAddChapter}\r\n              onGoBack={goBack}\r\n              isLoading={childChaptersLoading}\r\n            />\r\n          )}\r\n        </Col>\r\n        <Col md={3}>\r\n          {currentChapter &&\r\n            <Card className={`shadow mt-3 ${isDarkMode ? 'dark-mode' : 'light-mode'}`}>\r\n              <Card.Body>\r\n                <Card.Title>{data.getStory.title}</Card.Title>\r\n                <Card.Subtitle className=\"mb-2 text-muted\">{data.getStory.genre}</Card.Subtitle>\r\n                {currentChapter.title && <Card.Text>Chapter {currentChapter.branch+1}:<br /> { currentChapter.title }</Card.Text> }\r\n                <Card.Text><span>Reads: {currentChapter && currentChapter.reads_count}</span></Card.Text>\r\n                <Card.Text><small className=\"text-muted\">Written by: {currentChapter ?\r\n                  <Link to={`/user/${currentChapter.author.id}`}>{currentChapter.author.username}</Link> :\r\n                  <Link to={`/user/${data.getStory.author.id}`}>{data.getStory.author.username}</Link> }\r\n                </small>\r\n                </Card.Text>\r\n                {currentChapter.branch === 0 ?<Card.Text>{data.getStory.description}</Card.Text>:null}\r\n                {currentChapter.author.coffee && <Card.Text>Enjoying what {currentChapter.author.username} is writing? <a href={currentChapter.author.coffee} target=\"_blank\" rel=\"noreferrer\"> Buy them a coffee </a>  </Card.Text>}\r\n\r\n              </Card.Body>\r\n            </Card>}\r\n\r\n        </Col>\r\n      </Row>\r\n    </Container>\r\n  )\r\n}\r\n\r\nexport default StoryPage\r\n"],"names":["_ref","message","onRetry","_jsx","Container","className","children","_jsxs","Alert","variant","Heading","Button","onClick","comment","user","deleteComment","addNotification","useNotifications","delComment","useMutation","DELETE_COMMENT","isDarkMode","useDarkMode","confirm","async","data","variables","commentId","id","console","log","error","Card","concat","Body","Row","Col","xs","md","src","email","alt","Title","Link","style","color","textDecoration","to","username","Text","content","_Fragment","Popconfirm","title","description","onConfirm","okText","cancelText","has_superpowers","validationSchema","Yup","required","min","max","initialValues","honeypot","chapterId","addNewComment","addComment","ADD_COMMENT_MUTATION","formik","useFormik","onSubmit","values","grecaptcha","ready","token","execute","action","Input","resetForm","Form","handleSubmit","Group","controlId","Control","as","name","placeholder","onChange","handleChange","onBlur","handleBlur","value","isInvalid","touched","errors","Feedback","type","display","comments","initialComments","useAuth","isAuthenticated","setComments","useState","prevComments","filter","fluid","length","map","CommentCard","href","AddCommentForm","newComment","chapter","childChapters","onNavigate","onAddChapter","onGoBack","isLoading","navigate","useNavigate","deleteChapter","DELETE_CHAPTER","deleteStory","DELETE_STORY","isLiked","setIsLiked","isDisabled","setIsDisabled","initialIsLiked","useQuery","IS_CHAPTER_LIKED","isChapterLiked","useIsChapterLiked","useEffect","toggleLikeUnlike","useLikeUnlikeChapter","likeChapterMutation","LIKE_CHAPTER","unlikeChapterMutation","UNLIKE_CHAPTER","like","likeChapter","unlikeChapter","handleDelete","branch","response","story","success","sanitizedHTML","DOMPurify","ArrowLeft","dangerouslySetInnerHTML","__html","author","disabled","result","votes_count","setTimeout","handleButton","HandThumbsUpFill","child","Comments","loadingTexts","LoadingComponent","justifyContent","alignItems","height","width","textAlign","Spin","size","Math","floor","random","StoryPage","storyId","useParams","loading","GET_STORY_BY_ID","getChildChapters","childChaptersData","childChaptersLoading","useLazyQuery","GET_CHAPTER_CHILDREN","getParentChapter","parentChapterData","GET_CHAPTER","location","useLocation","navigationStack","newNavigationStack","state","currentChapter","setCurrentChapter","setNavigationStack","window","history","replaceState","getStory","chapters","getChapter","ErrorComponent","Chapter","getChapterChildren","chaptersArray","Array","isArray","scrollTo","top","behavior","selectedChapter","find","handleAddChapter","parentChapter","goBack","lastChapter","pop","parentChapterId","getChapterId","Subtitle","genre","reads_count","coffee","target","rel"],"sourceRoot":""}