{"version":3,"file":"static/js/680.63b96c9a.chunk.js","mappings":"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","sources":["pages/users/UserSettings.jsx","../node_modules/react-bootstrap/esm/AlertHeading.js","../node_modules/react-bootstrap/esm/AlertLink.js","../node_modules/react-bootstrap/esm/Alert.js","../node_modules/react-bootstrap/esm/InputGroupText.js","../node_modules/react-bootstrap/esm/InputGroup.js"],"sourcesContent":["\r\nimport { useFormik } from 'formik'\r\nimport * as Yup from 'yup'\r\nimport { Accordion, Form, Button, Container, Alert, Row, Col, Card, InputGroup } from 'react-bootstrap'\r\nimport { useMutation } from '@apollo/client'\r\nimport { EDIT_COFFEE, CHANGE_PASSWORD } from '../../api/queries'\r\nimport { useNotifications } from '../../components/NotificationsContext'\r\nimport { useDarkMode } from '../../components/DarkModeContext'\r\n\r\n\r\nconst UserSettings = () => {\r\n  const { isDarkMode } = useDarkMode()\r\n  const { addNotification } = useNotifications()\r\n  const [editCoffee] = useMutation(EDIT_COFFEE)\r\n  const [changePassword] = useMutation(CHANGE_PASSWORD)\r\n\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      currentPassword: '',\r\n      newPassword: '',\r\n      confirmPassword: '',\r\n      coffeeName: '',\r\n    },\r\n    validationSchema: Yup.object({\r\n      currentPassword: Yup.string().required('Current password is required'),\r\n      newPassword: Yup.string().required('New password is required'),\r\n      confirmPassword: Yup.string()\r\n        .oneOf([Yup.ref('newPassword'), null], 'Passwords must match')\r\n        .required('Confirm password is required'),\r\n      coffeeName: Yup.string().required('Coffee name is required'),\r\n    }),\r\n    onSubmit: (values) => {\r\n    },\r\n  })\r\n\r\n  const handlePasswordChange = async () => {\r\n    const { currentPassword, newPassword } = formik.values\r\n    try{    await changePassword({\r\n      variables: { oldPassword: currentPassword, newPassword: newPassword },\r\n    })\r\n    formik.setSubmitting(false)\r\n    formik.resetForm()\r\n    addNotification('Password changed.', 3000, 'success')\r\n    }\r\n    catch(error) {\r\n      addNotification(error.message, 3000, 'error')\r\n      console.error(error)\r\n    }\r\n\r\n  }\r\n\r\n  const handleCoffeeLinkChange = async () => {\r\n    try {\r\n      const fullLink = `https://www.buymeacoffee.com/${formik.values.coffeeName}`\r\n      console.log(fullLink)\r\n      await editCoffee({ variables: { link: fullLink } })\r\n      formik.setSubmitting(false)\r\n      formik.resetForm()\r\n      addNotification('Coffee link changed.', 3000, 'success')\r\n    } catch (error) {\r\n      addNotification(error.message, 3000, 'error')\r\n      console.error(error)\r\n    }\r\n  }\r\n\r\n\r\n  return (\r\n    <Container>\r\n      <Row className=\"justify-content-md-center mt-4\">\r\n        <Col md={6}>\r\n          <Accordion defaultActiveKey=\"0\">\r\n            <Accordion.Item eventKey=\"1\" className={`${isDarkMode ? 'dark-mode' : 'light-mode'}`}>\r\n              <Accordion.Header>Change Password</Accordion.Header>\r\n              <Accordion.Body>\r\n                <Card>\r\n                  <Card.Body>\r\n                    <Form\r\n                      onSubmit={(e) => {\r\n                        e.preventDefault()\r\n                        handlePasswordChange()\r\n                      }}\r\n                    >\r\n                      <Form.Group className='mt-2'>\r\n                        <Form.Label>Current Password</Form.Label>\r\n                        <Form.Control\r\n                          type=\"password\"\r\n                          name=\"currentPassword\"\r\n                          onChange={formik.handleChange}\r\n                          value={formik.values.currentPassword}\r\n                        />\r\n                      </Form.Group>\r\n                      <Form.Group className='mt-2'>\r\n                        <Form.Label>New Password</Form.Label>\r\n                        <Form.Control\r\n                          type=\"password\"\r\n                          name=\"newPassword\"\r\n                          onChange={formik.handleChange}\r\n                          value={formik.values.newPassword}\r\n                        />\r\n                      </Form.Group>\r\n                      <Form.Group className='mt-2'>\r\n                        <Form.Label>Confirm Password</Form.Label>\r\n                        <Form.Control\r\n                          type=\"password\"\r\n                          name=\"confirmPassword\"\r\n                          onChange={formik.handleChange}\r\n                          value={formik.values.confirmPassword}\r\n                        />\r\n                      </Form.Group>\r\n                      <Button variant=\"secondary\" className='mt-2' type=\"submit\">\r\n                        Update Password\r\n                      </Button>\r\n                    </Form>\r\n                  </Card.Body>\r\n                </Card>\r\n              </Accordion.Body>\r\n            </Accordion.Item>\r\n            <Accordion.Item eventKey=\"2\" className={`${isDarkMode ? 'dark-mode' : 'light-mode'}`}>\r\n              <Accordion.Header>Edit your Buy Me a Coffee link</Accordion.Header>\r\n              <Accordion.Body>\r\n                <Card>\r\n                  <Card.Body>\r\n                    <Form\r\n                      onSubmit={(e) => {\r\n                        e.preventDefault()\r\n                        handleCoffeeLinkChange()\r\n                      }}\r\n                    >\r\n                      <Form.Group>\r\n                        <Form.Label htmlFor=\"basic-url\">Your Buy Me a Coffee URL</Form.Label>\r\n                        <InputGroup className=\"mb-3\">\r\n                          <InputGroup.Text id=\"basic-addon3\">\r\n                            https://www.buymeacoffee.com/\r\n                          </InputGroup.Text>\r\n                          <Form.Control\r\n                            id=\"basic-url\"\r\n                            aria-describedby=\"basic-addon3\"\r\n                            type=\"text\"\r\n                            name=\"coffeeName\"\r\n                            onChange={formik.handleChange}\r\n                            value={formik.values.coffeeName}\r\n                          />\r\n                        </InputGroup>\r\n                        {formik.errors.coffeeName && <Alert variant=\"danger\" className=\"mt-3\">{formik.errors.coffeeName}</Alert>}\r\n                      </Form.Group>\r\n                      <Button variant=\"secondary\" className='mt-2' type=\"submit\">\r\n                        Update\r\n                      </Button>\r\n                    </Form>\r\n                  </Card.Body>\r\n                </Card>\r\n              </Accordion.Body>\r\n            </Accordion.Item>\r\n          </Accordion>\r\n        </Col>\r\n      </Row>\r\n    </Container>\r\n  )\r\n}\r\n\r\nexport default UserSettings\r\n","\"use client\";\n\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport divWithClassName from './divWithClassName';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst DivStyledAsH4 = divWithClassName('h4');\nDivStyledAsH4.displayName = 'DivStyledAsH4';\nconst AlertHeading = /*#__PURE__*/React.forwardRef(({\n  className,\n  bsPrefix,\n  as: Component = DivStyledAsH4,\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'alert-heading');\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    className: classNames(className, bsPrefix),\n    ...props\n  });\n});\nAlertHeading.displayName = 'AlertHeading';\nexport default AlertHeading;","\"use client\";\n\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport Anchor from '@restart/ui/Anchor';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst AlertLink = /*#__PURE__*/React.forwardRef(({\n  className,\n  bsPrefix,\n  as: Component = Anchor,\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'alert-link');\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    className: classNames(className, bsPrefix),\n    ...props\n  });\n});\nAlertLink.displayName = 'AlertLink';\nexport default AlertLink;","\"use client\";\n\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { useUncontrolled } from 'uncontrollable';\nimport useEventCallback from '@restart/hooks/useEventCallback';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport AlertHeading from './AlertHeading';\nimport AlertLink from './AlertLink';\nimport Fade from './Fade';\nimport CloseButton from './CloseButton';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst Alert = /*#__PURE__*/React.forwardRef((uncontrolledProps, ref) => {\n  const {\n    bsPrefix,\n    show = true,\n    closeLabel = 'Close alert',\n    closeVariant,\n    className,\n    children,\n    variant = 'primary',\n    onClose,\n    dismissible,\n    transition = Fade,\n    ...props\n  } = useUncontrolled(uncontrolledProps, {\n    show: 'onClose'\n  });\n  const prefix = useBootstrapPrefix(bsPrefix, 'alert');\n  const handleClose = useEventCallback(e => {\n    if (onClose) {\n      onClose(false, e);\n    }\n  });\n  const Transition = transition === true ? Fade : transition;\n  const alert = /*#__PURE__*/_jsxs(\"div\", {\n    role: \"alert\",\n    ...(!Transition ? props : undefined),\n    ref: ref,\n    className: classNames(className, prefix, variant && `${prefix}-${variant}`, dismissible && `${prefix}-dismissible`),\n    children: [dismissible && /*#__PURE__*/_jsx(CloseButton, {\n      onClick: handleClose,\n      \"aria-label\": closeLabel,\n      variant: closeVariant\n    }), children]\n  });\n  if (!Transition) return show ? alert : null;\n  return /*#__PURE__*/_jsx(Transition, {\n    unmountOnExit: true,\n    ...props,\n    ref: undefined,\n    in: show,\n    children: alert\n  });\n});\nAlert.displayName = 'Alert';\nexport default Object.assign(Alert, {\n  Link: AlertLink,\n  Heading: AlertHeading\n});","\"use client\";\n\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst InputGroupText = /*#__PURE__*/React.forwardRef(({\n  className,\n  bsPrefix,\n  as: Component = 'span',\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'input-group-text');\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    className: classNames(className, bsPrefix),\n    ...props\n  });\n});\nInputGroupText.displayName = 'InputGroupText';\nexport default InputGroupText;","\"use client\";\n\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { useMemo } from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport FormCheckInput from './FormCheckInput';\nimport InputGroupContext from './InputGroupContext';\nimport InputGroupText from './InputGroupText';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst InputGroupCheckbox = props => /*#__PURE__*/_jsx(InputGroupText, {\n  children: /*#__PURE__*/_jsx(FormCheckInput, {\n    type: \"checkbox\",\n    ...props\n  })\n});\nconst InputGroupRadio = props => /*#__PURE__*/_jsx(InputGroupText, {\n  children: /*#__PURE__*/_jsx(FormCheckInput, {\n    type: \"radio\",\n    ...props\n  })\n});\nconst InputGroup = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  size,\n  hasValidation,\n  className,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'div',\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'input-group');\n\n  // Intentionally an empty object. Used in detecting if a dropdown\n  // exists under an input group.\n  const contextValue = useMemo(() => ({}), []);\n  return /*#__PURE__*/_jsx(InputGroupContext.Provider, {\n    value: contextValue,\n    children: /*#__PURE__*/_jsx(Component, {\n      ref: ref,\n      ...props,\n      className: classNames(className, bsPrefix, size && `${bsPrefix}-${size}`, hasValidation && 'has-validation')\n    })\n  });\n});\nInputGroup.displayName = 'InputGroup';\nexport default Object.assign(InputGroup, {\n  Text: InputGroupText,\n  Radio: InputGroupRadio,\n  Checkbox: InputGroupCheckbox\n});"],"names":["UserSettings","isDarkMode","useDarkMode","addNotification","useNotifications","editCoffee","useMutation","EDIT_COFFEE","changePassword","CHANGE_PASSWORD","formik","useFormik","initialValues","currentPassword","newPassword","confirmPassword","coffeeName","validationSchema","Yup","required","oneOf","onSubmit","values","_jsx","Container","children","Row","className","Col","md","_jsxs","Accordion","defaultActiveKey","Item","eventKey","concat","Header","Body","Card","Form","e","preventDefault","async","variables","oldPassword","setSubmitting","resetForm","error","message","console","handlePasswordChange","Group","Label","Control","type","name","onChange","handleChange","value","Button","variant","fullLink","log","link","handleCoffeeLinkChange","htmlFor","InputGroup","Text","id","errors","Alert","DivStyledAsH4","divWithClassName","displayName","AlertHeading","React","_ref","ref","bsPrefix","as","Component","props","useBootstrapPrefix","classNames","AlertLink","Anchor","uncontrolledProps","show","closeLabel","closeVariant","onClose","dismissible","transition","Fade","useUncontrolled","prefix","handleClose","useEventCallback","Transition","alert","role","undefined","CloseButton","onClick","unmountOnExit","in","Object","assign","Link","Heading","InputGroupText","size","hasValidation","contextValue","useMemo","InputGroupContext","Provider","Radio","FormCheckInput","Checkbox"],"sourceRoot":""}