{"version":3,"file":"static/js/378.2c32ca67.chunk.js","mappings":"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","sources":["pages/users/UserSettings.jsx","../node_modules/antd/es/_util/motion.js","../node_modules/antd/es/config-provider/hooks/useSize.js","../node_modules/antd/es/style/motion/collapse.js","../node_modules/rc-util/es/Children/toArray.js"],"sourcesContent":["import { Collapse } from 'antd'\r\nimport { useFormik } from 'formik'\r\nimport * as Yup from 'yup'\r\nimport { Form, Button, Container, Alert, Row, Col, Card, InputGroup } from 'react-bootstrap'\r\nimport { useMutation } from '@apollo/client'\r\nimport { EDIT_COFFEE, CHANGE_PASSWORD } from '../../api/queries'\r\nimport { useNotifications } from '../../components/NotificationsContext'\r\n\r\nconst { Panel } = Collapse\r\n\r\nconst UserSettings = () => {\r\n  const { addNotification } = useNotifications()\r\n  const [editCoffee] = useMutation(EDIT_COFFEE)\r\n  const [changePassword] = useMutation(CHANGE_PASSWORD)\r\n\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      currentPassword: '',\r\n      newPassword: '',\r\n      confirmPassword: '',\r\n      coffeeName: '',\r\n    },\r\n    validationSchema: Yup.object({\r\n      currentPassword: Yup.string().required('Current password is required'),\r\n      newPassword: Yup.string().required('New password is required'),\r\n      confirmPassword: Yup.string()\r\n        .oneOf([Yup.ref('newPassword'), null], 'Passwords must match')\r\n        .required('Confirm password is required'),\r\n      coffeeName: Yup.string().required('Coffee name is required'),\r\n    }),\r\n    onSubmit: (values) => {\r\n    },\r\n  })\r\n\r\n  const handlePasswordChange = async () => {\r\n    const { currentPassword, newPassword } = formik.values\r\n    try{    await changePassword({\r\n      variables: { oldPassword: currentPassword, newPassword: newPassword },\r\n    })\r\n    formik.setSubmitting(false)\r\n    addNotification('Password changed.', 3000, 'success')\r\n    }\r\n    catch(error) {\r\n      addNotification(error.message, 3000, 'error')\r\n      console.error(error)\r\n    }\r\n\r\n  }\r\n\r\n  const handleCoffeeLinkChange = async () => {\r\n    try {\r\n      const fullLink = `https://www.buymeacoffee.com/${formik.values.coffeeName}`\r\n      console.log(fullLink)\r\n      await editCoffee({ variables: { link: fullLink } })\r\n      formik.setSubmitting(false)\r\n      addNotification('Coffee link changed.', 3000, 'success')\r\n    } catch (error) {\r\n      addNotification(error.message, 3000, 'error')\r\n      console.error(error)\r\n    }\r\n  }\r\n\r\n\r\n  return (\r\n    <Container>\r\n      <Row className=\"justify-content-md-center mt-4\">\r\n        <Col md={6}>\r\n          <Collapse accordion>\r\n            <Panel header=\"Change Password\" key=\"1\">\r\n              <Card>\r\n                <Card.Body>\r\n                  <Form\r\n                    onSubmit={(e) => {\r\n                      e.preventDefault()\r\n                      handlePasswordChange()\r\n                    }}\r\n                  >\r\n                    <Form.Group className='mt-2'>\r\n                      <Form.Label>Current Password</Form.Label>\r\n                      <Form.Control\r\n                        type=\"password\"\r\n                        name=\"currentPassword\"\r\n                        onChange={formik.handleChange}\r\n                        value={formik.values.currentPassword}\r\n                      />\r\n                    </Form.Group>\r\n                    <Form.Group className='mt-2'>\r\n                      <Form.Label>New Password</Form.Label>\r\n                      <Form.Control\r\n                        type=\"password\"\r\n                        name=\"newPassword\"\r\n                        onChange={formik.handleChange}\r\n                        value={formik.values.newPassword}\r\n                      />\r\n                    </Form.Group>\r\n                    <Form.Group className='mt-2'>\r\n                      <Form.Label>Confirm Password</Form.Label>\r\n                      <Form.Control\r\n                        type=\"password\"\r\n                        name=\"confirmPassword\"\r\n                        onChange={formik.handleChange}\r\n                        value={formik.values.confirmPassword}\r\n                      />\r\n                    </Form.Group>\r\n                    <Button variant=\"secondary\" className='mt-2' type=\"submit\">\r\n                      Update Password\r\n                    </Button>\r\n                  </Form>\r\n                </Card.Body>\r\n              </Card>\r\n            </Panel>\r\n            <Panel header=\"Edit your Buy Me a Coffee link\" key=\"2\">\r\n              <Card>\r\n                <Card.Body>\r\n                  <Form\r\n                    onSubmit={(e) => {\r\n                      e.preventDefault()\r\n                      handleCoffeeLinkChange()\r\n                    }}\r\n                  >\r\n                    <Form.Group>\r\n                      <Form.Label htmlFor=\"basic-url\">Your Buy Me a Coffee URL</Form.Label>\r\n                      <InputGroup className=\"mb-3\">\r\n                        <InputGroup.Text id=\"basic-addon3\">\r\n                          https://www.buymeacoffee.com/\r\n                        </InputGroup.Text>\r\n                        <Form.Control\r\n                          id=\"basic-url\"\r\n                          aria-describedby=\"basic-addon3\"\r\n                          type=\"text\"\r\n                          name=\"coffeeName\"\r\n                          onChange={formik.handleChange}\r\n                          value={formik.values.coffeeName}\r\n                        />\r\n                      </InputGroup>\r\n                      {formik.errors.coffeeName && <Alert variant=\"danger\" className=\"mt-3\">{formik.errors.coffeeName}</Alert>}\r\n                    </Form.Group>\r\n                    <Button variant=\"secondary\" className='mt-2' type=\"submit\">\r\n                      Update\r\n                    </Button>\r\n                  </Form>\r\n                </Card.Body>\r\n              </Card>\r\n            </Panel>\r\n          </Collapse>\r\n        </Col>\r\n      </Row>\r\n    </Container>\r\n  )\r\n}\r\n\r\nexport default UserSettings\r\n","// ================== Collapse Motion ==================\nconst getCollapsedHeight = () => ({\n  height: 0,\n  opacity: 0\n});\nconst getRealHeight = node => {\n  const {\n    scrollHeight\n  } = node;\n  return {\n    height: scrollHeight,\n    opacity: 1\n  };\n};\nconst getCurrentHeight = node => ({\n  height: node ? node.offsetHeight : 0\n});\nconst skipOpacityTransition = (_, event) => (event === null || event === void 0 ? void 0 : event.deadline) === true || event.propertyName === 'height';\nconst initCollapseMotion = function () {\n  let rootCls = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 'ant';\n  return {\n    motionName: `${rootCls}-motion-collapse`,\n    onAppearStart: getCollapsedHeight,\n    onEnterStart: getCollapsedHeight,\n    onAppearActive: getRealHeight,\n    onEnterActive: getRealHeight,\n    onLeaveStart: getCurrentHeight,\n    onLeaveActive: getCollapsedHeight,\n    onAppearEnd: skipOpacityTransition,\n    onEnterEnd: skipOpacityTransition,\n    onLeaveEnd: skipOpacityTransition,\n    motionDeadline: 500\n  };\n};\nconst SelectPlacements = ['bottomLeft', 'bottomRight', 'topLeft', 'topRight'];\nconst getTransitionName = (rootPrefixCls, motion, transitionName) => {\n  if (transitionName !== undefined) {\n    return transitionName;\n  }\n  return `${rootPrefixCls}-${motion}`;\n};\nexport { getTransitionName };\nexport default initCollapseMotion;","import React from 'react';\nimport SizeContext from '../SizeContext';\nconst useSize = customSize => {\n  const size = React.useContext(SizeContext);\n  const mergedSize = React.useMemo(() => {\n    if (!customSize) {\n      return size;\n    }\n    if (typeof customSize === 'string') {\n      return customSize !== null && customSize !== void 0 ? customSize : size;\n    }\n    if (customSize instanceof Function) {\n      return customSize(size);\n    }\n    return size;\n  }, [customSize, size]);\n  return mergedSize;\n};\nexport default useSize;","const genCollapseMotion = token => ({\n  [token.componentCls]: {\n    // For common/openAnimation\n    [`${token.antCls}-motion-collapse-legacy`]: {\n      overflow: 'hidden',\n      '&-active': {\n        transition: `height ${token.motionDurationMid} ${token.motionEaseInOut},\n        opacity ${token.motionDurationMid} ${token.motionEaseInOut} !important`\n      }\n    },\n    [`${token.antCls}-motion-collapse`]: {\n      overflow: 'hidden',\n      transition: `height ${token.motionDurationMid} ${token.motionEaseInOut},\n        opacity ${token.motionDurationMid} ${token.motionEaseInOut} !important`\n    }\n  }\n});\nexport default genCollapseMotion;","import React from 'react';\nimport { isFragment } from 'react-is';\nexport default function toArray(children) {\n  var option = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  var ret = [];\n  React.Children.forEach(children, function (child) {\n    if ((child === undefined || child === null) && !option.keepEmpty) {\n      return;\n    }\n    if (Array.isArray(child)) {\n      ret = ret.concat(toArray(child));\n    } else if (isFragment(child) && child.props) {\n      ret = ret.concat(toArray(child.props.children, option));\n    } else {\n      ret.push(child);\n    }\n  });\n  return ret;\n}"],"names":["Panel","Collapse","UserSettings","addNotification","useNotifications","editCoffee","useMutation","EDIT_COFFEE","changePassword","CHANGE_PASSWORD","formik","useFormik","initialValues","currentPassword","newPassword","confirmPassword","coffeeName","validationSchema","Yup","required","oneOf","onSubmit","values","_jsx","Container","children","Row","className","Col","md","_jsxs","accordion","header","Card","Body","Form","e","preventDefault","async","variables","oldPassword","setSubmitting","error","message","console","handlePasswordChange","Group","Label","Control","type","name","onChange","handleChange","value","Button","variant","fullLink","concat","log","link","handleCoffeeLinkChange","htmlFor","InputGroup","Text","id","errors","Alert","getCollapsedHeight","height","opacity","getRealHeight","node","scrollHeight","getCurrentHeight","offsetHeight","skipOpacityTransition","_","event","deadline","propertyName","getTransitionName","rootPrefixCls","motion","transitionName","undefined","motionName","arguments","length","onAppearStart","onEnterStart","onAppearActive","onEnterActive","onLeaveStart","onLeaveActive","onAppearEnd","onEnterEnd","onLeaveEnd","motionDeadline","customSize","size","React","SizeContext","Function","token","componentCls","antCls","overflow","transition","motionDurationMid","motionEaseInOut","toArray","option","ret","forEach","child","keepEmpty","Array","isArray","isFragment","props","push"],"sourceRoot":""}