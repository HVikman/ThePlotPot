{"version":3,"file":"static/js/622.03f151cd.chunk.js","mappings":"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","sources":["pages/auth/Login.jsx"],"sourcesContent":["import { useState } from 'react'\r\nimport { useFormik } from 'formik'\r\nimport * as Yup from 'yup'\r\nimport { useMutation } from '@apollo/client'\r\nimport { LOGIN_MUTATION } from '../../api/queries'\r\nimport { useNavigate } from 'react-router-dom'\r\nimport { useAuth } from './AuthContext'\r\nimport { Form, Button, Container, Alert } from 'react-bootstrap'\r\nimport { useNotifications } from '../../components/NotificationsContext'\r\n\r\nconst LoginSchema = Yup.object().shape({\r\n  email: Yup.string().email('Invalid email').required('Email is required'),\r\n  password: Yup.string().required('Password is required'),\r\n})\r\n\r\nconst Login = () => {\r\n  const { addNotification } = useNotifications()\r\n  const [loginError, setLoginError] = useState(null)\r\n  const { user, setUser } = useAuth()\r\n  const isAuthenticated = !!user\r\n  const navigate = useNavigate()\r\n  const [login] = useMutation(LOGIN_MUTATION, {\r\n    update: (cache, { data }) => {\r\n      if (data.login.success) {\r\n        setUser(data.login.user)\r\n        addNotification(`Welcome back ${data.login.user.username}`)\r\n        navigate('/')\r\n      } else {\r\n        setLoginError('Wrong username/password.')\r\n      }\r\n    },\r\n    onError: (error) => {\r\n      addNotification(`Something went wrong: ${error}`,2000,'error')\r\n    },\r\n  })\r\n\r\n\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      email: '',\r\n      password: '',\r\n      honeypot: ''\r\n    },\r\n    validationSchema: LoginSchema,\r\n    onSubmit: async (values) => {\r\n      if (values.honeypot) {\r\n        console.log('Bot detected')\r\n        return\r\n      }\r\n      login({ variables: values })\r\n    },\r\n  })\r\n  if(isAuthenticated){navigate('/'); return <p>You are already logged in.</p>}\r\n  return (\r\n    <Container style={{ maxWidth: '400px', marginTop: '50px' }}>\r\n      <Form onSubmit={formik.handleSubmit}>\r\n        <Form.Group controlId=\"formBasicEmail\" className='mt-2 custom-form'>\r\n          <Form.Label>Email address</Form.Label>\r\n          <Form.Control\r\n            type=\"email\"\r\n            name=\"email\"\r\n            value={formik.values.email}\r\n            onChange={formik.handleChange}\r\n            onBlur={formik.handleBlur}\r\n            isInvalid={formik.touched.email && formik.errors.email}\r\n            placeholder=\"Enter email\"\r\n          />\r\n          <Form.Control.Feedback type=\"invalid\">\r\n            {formik.errors.email}\r\n          </Form.Control.Feedback>\r\n        </Form.Group>\r\n\r\n        <Form.Group controlId=\"formBasicPassword\" className='mt-4 custom-form'>\r\n          <Form.Label>Password</Form.Label>\r\n          <Form.Control\r\n            type=\"password\"\r\n            name=\"password\"\r\n            value={formik.values.password}\r\n            onChange={formik.handleChange}\r\n            onBlur={formik.handleBlur}\r\n            isInvalid={formik.touched.password && formik.errors.password}\r\n            placeholder=\"Password\"\r\n          />\r\n          <Form.Control.Feedback type=\"invalid\">\r\n            {formik.errors.password}\r\n          </Form.Control.Feedback>\r\n        </Form.Group>\r\n        <Form.Control style={{ display: 'none' }} name=\"honeypot\" onChange={formik.handleChange} value={formik.values.honeypot} />\r\n        <Button variant=\"secondary\" className='mt-2' type=\"submit\">\r\n          Login\r\n        </Button>\r\n      </Form>\r\n      {loginError && <Alert variant=\"danger\" className=\"mt-3\">{loginError}</Alert>}\r\n    </Container>\r\n  )\r\n}\r\n\r\nexport default Login\r\n"],"names":["LoginSchema","Yup","shape","email","required","password","addNotification","useNotifications","_useState","useState","_useState2","_slicedToArray","loginError","setLoginError","_useAuth","useAuth","user","setUser","isAuthenticated","navigate","useNavigate","_useMutation","useMutation","LOGIN_MUTATION","update","cache","_ref","data","login","success","concat","username","onError","error","formik","useFormik","initialValues","honeypot","validationSchema","onSubmit","_onSubmit","_asyncToGenerator","_regeneratorRuntime","mark","_callee","values","wrap","_context","prev","next","console","log","abrupt","variables","stop","_x","apply","arguments","_jsx","children","_jsxs","Container","style","maxWidth","marginTop","Form","handleSubmit","Group","controlId","className","Label","Control","type","name","value","onChange","handleChange","onBlur","handleBlur","isInvalid","touched","errors","placeholder","Feedback","display","Button","variant","Alert"],"sourceRoot":""}