{"version":3,"file":"static/js/546.acaddb2e.chunk.js","mappings":"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","sources":["components/Error.jsx","pages/storypage/CommentCard.jsx","pages/storypage/AddComment.jsx","pages/storypage/Comments.jsx","pages/storypage/Chapter.jsx","hooks/likes.js","pages/storypage/Loading.jsx","pages/storypage/StoryPage.jsx"],"sourcesContent":["import React from 'react'\r\nimport { Container, Alert, Button } from 'react-bootstrap'\r\n\r\nconst ErrorComponent = ({ message, onRetry }) => {\r\n  return (\r\n    <Container className=\"mt-5\">\r\n      <Alert variant=\"danger\">\r\n        <Alert.Heading>Oh snap! An error occurred.</Alert.Heading>\r\n        <p>{message || 'Something went wrong. Please try again later.'}</p>\r\n        {onRetry && <Button variant=\"primary\" onClick={onRetry}>Retry</Button>}\r\n      </Alert>\r\n    </Container>\r\n  )\r\n}\r\n\r\nexport default ErrorComponent","import React from 'react'\r\nimport { Card, Row, Col, Button } from 'react-bootstrap'\r\nimport { Popconfirm } from 'antd'\r\nimport { Link } from 'react-router-dom'\r\nimport { useMutation } from '@apollo/client'\r\nimport { DELETE_COMMENT } from '../../api/queries'\r\nimport { useNotifications } from '../../components/NotificationsContext'\r\n\r\nconst CommentCard = ({ comment, user, deleteComment }) => {\r\n  const { addNotification } = useNotifications()\r\n  const [delComment] = useMutation(DELETE_COMMENT)\r\n\r\n  const confirm = async () => {\r\n    try {\r\n      const { data } = await delComment({\r\n        variables: {\r\n          commentId: comment.id\r\n        }\r\n      })\r\n\r\n      console.log(data)\r\n      deleteComment(comment.id)\r\n      addNotification('Comment deleted successfully!', 3000, 'success')\r\n\r\n    } catch (error) {\r\n      console.error('There was an error deleting the comment:', error)\r\n      addNotification(error.message, 3000, 'error')\r\n    }\r\n\r\n\r\n  }\r\n\r\n\r\n  return (\r\n    <Card className=\"mt-3\">\r\n      <Card.Body>\r\n        <Row>\r\n          <Col xs={3} md={1}>\r\n            <img\r\n              src={`https://www.gravatar.com/avatar/${comment.user.email}?s=400&d=robohash`}\r\n              className=\"img-fluid rounded-circle\"\r\n              alt=\"User Gravatar\"\r\n            />\r\n          </Col>\r\n          <Col xs={8} md={10}>\r\n            <Card.Title><Link style={{ color: 'inherit', textDecoration: 'inherit' }} to={`/user/${comment.user.id}`}>{comment.user.username}</Link></Card.Title>\r\n            <Card.Text>{comment.content}</Card.Text>\r\n          </Col>\r\n          <Col xs={1} md={1} className=\"d-flex align-items-start justify-content-end\">\r\n            {user && user.id === comment.user.id && (\r\n              <Popconfirm\r\n                title='Delete comment'\r\n                description='Are you sure you want to delete this comment'\r\n                onConfirm={confirm}\r\n                okText='Yes'\r\n                cancelText='No'\r\n              >\r\n                <Button variant='danger'>Delete</Button>\r\n              </Popconfirm>\r\n\r\n            )}\r\n          </Col>\r\n        </Row>\r\n      </Card.Body>\r\n    </Card>\r\n  )\r\n}\r\n\r\nexport default CommentCard\r\n","import { useFormik } from 'formik'\r\nimport * as Yup from 'yup'\r\nimport { Form, Button } from 'react-bootstrap'\r\nimport { useNotifications } from '../../components/NotificationsContext'\r\nimport { useMutation } from '@apollo/client'\r\nimport { ADD_COMMENT_MUTATION } from '../../api/queries'\r\n\r\nconst validationSchema = Yup.object({\r\n  content: Yup.string()\r\n    .required('Required')\r\n    .min(10, 'Comment must be atleast 10 characters')\r\n    .max(1000, 'Must be 1000 characters or less')\r\n})\r\n\r\nconst initialValues = {\r\n  content: '',\r\n  honeypot: ''\r\n}\r\n\r\nconst AddCommentForm = ({ chapterId, addNewComment }) => {\r\n  const { addNotification } = useNotifications()\r\n\r\n  const [addComment] = useMutation(ADD_COMMENT_MUTATION)\r\n\r\n  const formik = useFormik({\r\n    initialValues,\r\n    validationSchema,\r\n    onSubmit: async (values) => {\r\n      console.log(chapterId)\r\n      if (values.honeypot) {\r\n        console.log('Bot detected')\r\n        return\r\n      }\r\n\r\n      try {\r\n        const { data } = await addComment({\r\n          variables: {\r\n            Input: {\r\n              content: values.content,\r\n              chapterId,\r\n            }\r\n          }\r\n        })\r\n\r\n        addNewComment(data.addComment)\r\n        addNotification('Comment added successfully!', 3000, 'success')\r\n        formik.resetForm()\r\n      } catch (error) {\r\n        console.error('There was an error adding the comment:', error)\r\n        addNotification(error.message, 3000, 'error')\r\n      }\r\n    },\r\n  })\r\n\r\n  return (\r\n    <div className=\"add-comment-container mt-3\">\r\n      <h2>Add a Comment</h2>\r\n      <Form onSubmit={formik.handleSubmit}>\r\n\r\n        <Form.Group controlId=\"commentContent\" className='my-2 custom-form'>\r\n          <Form.Control\r\n            as=\"textarea\"\r\n            name=\"content\"\r\n            placeholder=\"Your comment...\"\r\n            onChange={formik.handleChange}\r\n            onBlur={formik.handleBlur}\r\n            value={formik.values.content}\r\n            isInvalid={formik.touched.content && formik.errors.content}\r\n          />\r\n          <Form.Control.Feedback type=\"invalid\">\r\n            {formik.errors.content}\r\n          </Form.Control.Feedback>\r\n        </Form.Group>\r\n\r\n        <div style={{ display: 'none' }}>\r\n          <Form.Control name=\"honeypot\" onChange={formik.handleChange} value={formik.values.honeypot} />\r\n        </div>\r\n\r\n        <Button variant=\"secondary\" type=\"submit\">Submit</Button>\r\n      </Form>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default AddCommentForm\r\n","import { useState } from 'react'\r\nimport { Container } from 'react-bootstrap'\r\nimport CommentCard from './CommentCard'\r\nimport AddCommentForm from './AddComment'\r\nimport { useAuth } from '../auth/AuthContext'\r\n\r\nconst Comments = ({ comments: initialComments, chapterId }) => {\r\n  const { user } = useAuth()\r\n  const isAuthenticated = !!user\r\n  const [comments, setComments] = useState(initialComments)\r\n\r\n  const addNewComment = (newComment) => {\r\n    setComments(prevComments => [...prevComments, newComment])\r\n  }\r\n  const deleteComment = (commentId) => {\r\n    setComments(prevComments => prevComments.filter(comment => comment.id !== commentId))\r\n  }\r\n\r\n  return (\r\n\r\n    <Container fluid className='my-4 py-2'>\r\n      <h1>Comments</h1>\r\n      {}\r\n      {comments && comments.length > 0 ? comments.map(comment => (\r\n        <CommentCard key={comment.id} comment={comment} user={user} deleteComment={deleteComment} />\r\n      )): <p>No comments yet, be first to comment!</p>}{isAuthenticated && <AddCommentForm chapterId={chapterId} addNewComment={addNewComment} />}\r\n    </Container>\r\n  )\r\n}\r\n\r\nexport default Comments\r\n","import { useState, useEffect } from 'react'\r\nimport DOMPurify from 'dompurify'\r\nimport './chapter.css'\r\nimport { Button } from 'react-bootstrap'\r\nimport { useAuth } from '../auth/AuthContext'\r\nimport { ArrowLeft, HandThumbsUpFill } from 'react-bootstrap-icons'\r\nimport { useLikeUnlikeChapter, useIsChapterLiked } from '../../hooks/likes'\r\nimport Comments from './Comments'\r\nimport { Popconfirm } from 'antd'\r\nimport { useMutation } from '@apollo/client'\r\nimport { DELETE_CHAPTER, DELETE_STORY } from '../../api/queries'\r\nimport { useNavigate } from 'react-router-dom'\r\nimport { useNotifications } from '../../components/NotificationsContext'\r\n\r\n\r\nconst Chapter = ({ chapter, childChapters, onNavigate, onAddChapter, onGoBack, isLoading }) => {\r\n  const { addNotification } = useNotifications()\r\n  const navigate = useNavigate()\r\n  const [deleteChapter] = useMutation(DELETE_CHAPTER)\r\n  const [deleteStory] = useMutation(DELETE_STORY)\r\n  const [isLiked, setIsLiked] = useState(null)\r\n  const [isDisabled, setIsDisabled] = useState(false)\r\n\r\n  const initialIsLiked = useIsChapterLiked(chapter.id)\r\n  useEffect(() => {\r\n    setIsLiked(initialIsLiked)\r\n  }, [initialIsLiked])\r\n\r\n  const toggleLikeUnlike = useLikeUnlikeChapter()\r\n\r\n  const handleButton = async () => {\r\n    setIsDisabled(true)\r\n\r\n    if (!isLiked) {\r\n      const result = await toggleLikeUnlike(true, chapter.id)\r\n      chapter.votes_count = chapter.votes_count + 1\r\n      setIsLiked(true)\r\n      console.log('Like result:', result)}\r\n    else {const result = await toggleLikeUnlike(false, chapter.id)\r\n      setIsLiked(false)\r\n      chapter.votes_count = chapter.votes_count- 1\r\n      console.log('Unlike result:', result)}\r\n\r\n    setTimeout(() => {\r\n      setIsDisabled(false)\r\n    }, 1000)\r\n  }\r\n  const handleDelete = async () => {\r\n    console.log(chapter)\r\n    try {\r\n      if (chapter.branch === 0) {\r\n        const response = await deleteStory({\r\n          variables: { id: chapter.story.id }\r\n        })\r\n\r\n        if (response.data.deleteStory.success) {\r\n          addNotification(response.data.deleteStory.message, 3000, 'success')\r\n          navigate('/')\r\n          console.log('Story deleted successfully')\r\n        } else {\r\n          console.error(response.data.deleteStory.message)\r\n          addNotification(response.data.deleteStory.message, 3000, 'error')\r\n        }\r\n\r\n      } else {\r\n        const response = await deleteChapter({\r\n          variables: { id: chapter.id }\r\n        })\r\n\r\n        if (response.data.deleteChapter.success) {\r\n          addNotification(response.data.deleteChapter.message, 3000, 'success')\r\n          navigate('/')\r\n          console.log('Chapter deleted successfully')\r\n        } else {\r\n          console.error(response.data.deleteChapter.message)\r\n          addNotification(response.data.deleteChapter.message, 3000, 'error')\r\n        }\r\n      }\r\n    } catch (error) {\r\n      console.error('Error deleting:', error)\r\n    }\r\n  }\r\n\r\n\r\n\r\n  const { user } = useAuth()\r\n  const isAuthenticated = !!user\r\n  const sanitizedHTML = DOMPurify.sanitize(chapter.content)\r\n\r\n  return (\r\n    <div className=\"chapter\">\r\n\r\n      <Button variant='secondary' className=\"mb-3\" onClick={() => onGoBack()}>\r\n        < ArrowLeft />\r\n      </Button>\r\n      <div className='chapter-content shadow my-2' dangerouslySetInnerHTML={{ __html: sanitizedHTML }} />\r\n      <div className=\"chapter-stats m-2\">\r\n        {\r\n          isAuthenticated ? (\r\n            user.id === chapter.author.id ? ( childChapters.length === 0 ?\r\n              <>\r\n                <Popconfirm\r\n                  title={chapter.branch === 0 ?'Delete story' : 'Delete chapter'}\r\n                  description={chapter.branch === 0 ? 'Are you sure you want to delete this story': 'Are you sure you want to delete this chapter'}\r\n                  onConfirm={handleDelete}\r\n                  okText='Yes'\r\n                  cancelText='No'\r\n                >\r\n                  <Button variant='danger'>Delete</Button>\r\n                </Popconfirm><span>Likes:</span></>\r\n              : <span>Likes: </span>) : (\r\n              <Button\r\n                disabled={isDisabled}\r\n                variant={isLiked ? 'success' : 'secondary'}\r\n                className=\"mt-2\"\r\n                onClick={() => handleButton()}\r\n              >\r\n                <HandThumbsUpFill />\r\n              </Button>\r\n            )\r\n          ) : (\r\n            <span>Likes:</span>\r\n          )\r\n        }\r\n        <span>{chapter.votes_count}</span>\r\n      </div>\r\n      <div className=\"next-chapters m-2\">\r\n        {!isLoading && isAuthenticated && childChapters.length < 3 && chapter.branch < 9 && (\r\n          <Button variant='secondary' className=\"mr-3\" onClick={() => onAddChapter()}>Add Chapter</Button>\r\n        )}\r\n        {childChapters.map(child => (\r\n          <Button variant='secondary' className=\"mr-3\" key={child.id} onClick={() => onNavigate(child.id)}>\r\n            Continue to: {child.title}\r\n          </Button>\r\n        ))}\r\n\r\n      </div>\r\n      <Comments comments={chapter.comments} chapterId={chapter.id}/>\r\n\r\n\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Chapter\r\n","import { useQuery, useMutation } from '@apollo/client'\r\nimport { LIKE_CHAPTER, IS_CHAPTER_LIKED, UNLIKE_CHAPTER } from '../api/queries'\r\nimport { useNotifications } from '../components/NotificationsContext'\r\n\r\nexport const useIsChapterLiked = (id) => {\r\n  const { data } = useQuery(IS_CHAPTER_LIKED, {\r\n    variables: { id }\r\n  })\r\n\r\n  return data ? data.isChapterLiked : false\r\n}\r\n\r\n\r\nexport const useLikeUnlikeChapter = () => {\r\n  const { addNotification } = useNotifications()\r\n  const [likeChapterMutation] = useMutation(LIKE_CHAPTER)\r\n  const [unlikeChapterMutation] = useMutation(UNLIKE_CHAPTER)\r\n\r\n  const toggleLikeUnlike = async (like, id) => {\r\n    if (like) {\r\n      const { data } = await likeChapterMutation({ variables: { id } })\r\n      addNotification('Chapter liked', 1000, 'success')\r\n      return data.likeChapter\r\n    } else {\r\n      const { data } = await unlikeChapterMutation({ variables: { id } })\r\n      addNotification('Like removed', 1000, 'error')\r\n      return data.unlikeChapter\r\n    }\r\n  }\r\n\r\n  return toggleLikeUnlike\r\n}\r\n","import { Spin } from 'antd'\r\nimport { Card } from 'react-bootstrap'\r\n\r\nconst loadingTexts = [\r\n  'Your epic saga is so vast, even our scrolls are taking a while. Hang tight!',\r\n  'Your tale\\'s intrigue has our library elves on their toes. One moment!',\r\n  'Such a legendary story requires some extra ink and quill. Bear with us...',\r\n  'Even the grand storytellers of old would be impressed! Prepping your narrative...',\r\n  'Your chapters are so gripping, our books needed a breather. Stay tuned...',\r\n  'Paging all scribes! Your monumental tale is on the way...',\r\n  'Even our magic mirrors need a second to capture the grandeur of your plot. Patience!',\r\n  'Your story has so many layers, even the onions are jealous. Peeling back the pages...',\r\n  'With tales as epic as yours, even the stars stop to listen. Setting the stage...',\r\n  'Weaving tales this intricate takes a touch of sorcery. Conjuring your story...'\r\n]\r\n\r\nconst getRandomLoadingText = () => {\r\n  return loadingTexts[Math.floor(Math.random() * loadingTexts.length)]\r\n}\r\n\r\nconst LoadingComponent = () => {\r\n  return (\r\n    <div style={{ display: 'flex', justifyContent: 'center', alignItems: 'center', height: '80vh' }}>\r\n      <Card style={{ width: '300px', textAlign: 'center' }}>\r\n        <Card.Body>\r\n          <Spin size=\"large\" />\r\n          <Card.Title>Fetching the Story...</Card.Title>\r\n          <Card.Text>\r\n            {getRandomLoadingText()}\r\n          </Card.Text>\r\n        </Card.Body>\r\n      </Card>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default LoadingComponent","import { useState, useEffect } from 'react'\r\nimport { useQuery, useLazyQuery } from '@apollo/client'\r\nimport { useNavigate, useParams, useLocation, Link } from 'react-router-dom'\r\nimport Chapter from './Chapter'\r\nimport { Container, Row, Col, Card } from 'react-bootstrap'\r\nimport { GET_STORY_BY_ID, GET_CHAPTER_CHILDREN, GET_CHAPTER } from '../../api/queries'\r\nimport LoadingComponent from './Loading'\r\nimport ErrorComponent from '../../components/Error'\r\n\r\nconst StoryPage = () => {\r\n  const navigate = useNavigate()\r\n  const { storyId, chapterId } = useParams()\r\n\r\n  //GraphQL queries\r\n  const { data, loading, error } = useQuery(GET_STORY_BY_ID, {\r\n    variables: { id: storyId, chapterId },\r\n  })\r\n  const [getChildChapters, { data: childChaptersData, loading: childChaptersLoading }] = useLazyQuery(GET_CHAPTER_CHILDREN)\r\n  const [getParentChapter, { data: parentChapterData }] = useLazyQuery(GET_CHAPTER)\r\n\r\n  const location = useLocation()\r\n  const { chapter, navigationStack: newNavigationStack } = location.state || {}\r\n\r\n  const [currentChapter, setCurrentChapter] = useState(null)\r\n  const [navigationStack, setNavigationStack] = useState([])\r\n\r\n  useEffect(() => {\r\n    if (chapter) {\r\n      setCurrentChapter(chapter)\r\n      window.history.replaceState(null, '', `/story/${storyId}/chapter/${chapter.id}`)\r\n      if (newNavigationStack) {\r\n        setNavigationStack(newNavigationStack)\r\n      }\r\n    } else if (data && data.getStory && data.getStory.chapters) {\r\n      setCurrentChapter(data.getStory.chapters[0])\r\n    }\r\n  }, [chapter, data, newNavigationStack, storyId])\r\n  useEffect(() => {\r\n    if (currentChapter) {\r\n      getChildChapters({ variables: { id: currentChapter.id } })\r\n    }\r\n  }, [currentChapter, getChildChapters])\r\n  useEffect(() => {\r\n    if (parentChapterData && parentChapterData.getChapter) {\r\n      setCurrentChapter(parentChapterData.getChapter)\r\n      window.history.replaceState(null, '', `/story/${storyId}/chapter/${parentChapterData.getChapter.id}`)\r\n    }\r\n  }, [parentChapterData, storyId])\r\n\r\n  if (loading) return <LoadingComponent />\r\n  if (error) return <ErrorComponent message={error.message} />\r\n\r\n  const navigateToChapter = (chapterId) => {\r\n    let chaptersArray\r\n\r\n    if (childChaptersData && childChaptersData.getChapterChildren) {\r\n      chaptersArray = childChaptersData.getChapterChildren\r\n    } else if (data && data.getStory && Array.isArray(data.getStory.chapters)) {\r\n      chaptersArray = data.getStory.chapters\r\n    }\r\n    window.scrollTo({ top: 0, behavior: 'smooth' })\r\n    setNavigationStack([...navigationStack, currentChapter])\r\n    const selectedChapter = chaptersArray.find(chapter => chapter.id === chapterId)\r\n    if (!selectedChapter) {\r\n      console.log('Chapter not found with the given ID:', chapterId)\r\n      return\r\n    }\r\n    setCurrentChapter(selectedChapter)\r\n    window.history.replaceState(null, '', `/story/${storyId}/chapter/${selectedChapter.id}`)\r\n    getChildChapters({ variables: { id: selectedChapter.id } })\r\n  }\r\n\r\n  const goBack = () => {\r\n    const lastChapter = navigationStack.pop()\r\n    window.scrollTo({ top: 0, behavior: 'smooth' })\r\n    console.log(currentChapter)\r\n    setNavigationStack([...navigationStack])\r\n    if (lastChapter) {\r\n      setCurrentChapter(lastChapter)\r\n      window.history.replaceState(null, '', `/story/${storyId}/chapter/${lastChapter.id}`)\r\n    } else if (currentChapter && currentChapter.parentChapterId) {\r\n      getParentChapter({ variables: { getChapterId: currentChapter.parentChapterId } })\r\n    } else {\r\n      navigate('/')\r\n    }\r\n  }\r\n\r\n  const handleAddChapter = ( ) => {\r\n    navigate('/add-chapter', {\r\n      state: {\r\n        storyId: storyId,\r\n        parentChapter: currentChapter,\r\n        navigationStack: navigationStack\r\n      }\r\n    })\r\n  }\r\n\r\n  return (\r\n    <Container className=\"mt-5\">\r\n      <Row>\r\n        <Col md={9}>\r\n          {currentChapter && (\r\n            <Chapter\r\n              chapter={currentChapter}\r\n              childChapters={childChaptersData ? childChaptersData.getChapterChildren : []}\r\n              onNavigate={navigateToChapter}\r\n              onAddChapter={handleAddChapter}\r\n              onGoBack={goBack}\r\n              isLoading={childChaptersLoading}\r\n            />\r\n          )}\r\n        </Col>\r\n        <Col md={3}>\r\n          {currentChapter &&\r\n            <Card>\r\n              <Card.Body>\r\n                <Card.Title>{data.getStory.title}</Card.Title>\r\n                <Card.Subtitle className=\"mb-2 text-muted\">{data.getStory.genre}</Card.Subtitle>\r\n                {currentChapter.title && <Card.Text>Chapter {currentChapter.branch+1}:<br /> { currentChapter.title }</Card.Text> }\r\n                <Card.Text><span>Reads: {currentChapter && currentChapter.reads_count}</span></Card.Text>\r\n                <Card.Text><small className=\"text-muted\">Written by: {currentChapter ?\r\n                  <Link to={`/user/${currentChapter.author.id}`}>{currentChapter.author.username}</Link> :\r\n                  <Link to={`/user/${data.getStory.author.id}`}>{data.getStory.author.username}</Link> }\r\n                </small>\r\n                </Card.Text>\r\n                {currentChapter.branch === 0 ?<Card.Text>{data.getStory.description}</Card.Text>:null}\r\n                {currentChapter.author.coffee && <Card.Text>Enjoying what {currentChapter.author.username} is writing? <a href={currentChapter.author.coffee} target=\"_blank\" rel=\"noreferrer\"> Buy them a coffee </a>  </Card.Text>}\r\n\r\n              </Card.Body>\r\n            </Card>}\r\n\r\n        </Col>\r\n      </Row>\r\n    </Container>\r\n  )\r\n}\r\n\r\nexport default StoryPage\r\n"],"names":["_ref","message","onRetry","_jsx","Container","className","children","_jsxs","Alert","variant","Heading","Button","onClick","comment","user","deleteComment","addNotification","useNotifications","_useMutation","useMutation","DELETE_COMMENT","delComment","_slicedToArray","confirm","_ref2","_asyncToGenerator","_regeneratorRuntime","mark","_callee","_yield$delComment","data","wrap","_context","prev","next","variables","commentId","id","sent","console","log","t0","error","stop","apply","arguments","Card","Body","Row","Col","xs","md","src","concat","email","alt","Title","Link","style","color","textDecoration","to","username","Text","content","Popconfirm","title","description","onConfirm","okText","cancelText","validationSchema","Yup","required","min","max","initialValues","honeypot","chapterId","addNewComment","ADD_COMMENT_MUTATION","addComment","formik","useFormik","onSubmit","_onSubmit","values","_yield$addComment","abrupt","Input","resetForm","_x","Form","handleSubmit","Group","controlId","Control","as","name","placeholder","onChange","handleChange","onBlur","handleBlur","value","isInvalid","touched","errors","Feedback","type","display","initialComments","comments","useAuth","isAuthenticated","_useState","useState","_useState2","setComments","prevComments","filter","fluid","length","map","CommentCard","AddCommentForm","newComment","_toConsumableArray","chapter","childChapters","onNavigate","onAddChapter","onGoBack","isLoading","navigate","useNavigate","DELETE_CHAPTER","deleteChapter","_useMutation3","DELETE_STORY","deleteStory","isLiked","setIsLiked","_useState3","_useState4","isDisabled","setIsDisabled","initialIsLiked","useQuery","IS_CHAPTER_LIKED","isChapterLiked","useIsChapterLiked","useEffect","toggleLikeUnlike","LIKE_CHAPTER","likeChapterMutation","UNLIKE_CHAPTER","unlikeChapterMutation","like","_yield$likeChapterMut","_yield$unlikeChapterM","_data","likeChapter","unlikeChapter","_x2","useLikeUnlikeChapter","handleButton","result","_result","votes_count","setTimeout","handleDelete","_ref3","_callee2","response","_response","_context2","branch","story","success","sanitizedHTML","DOMPurify","ArrowLeft","dangerouslySetInnerHTML","__html","author","_Fragment","disabled","HandThumbsUpFill","child","Comments","loadingTexts","justifyContent","alignItems","height","width","textAlign","Spin","size","Math","floor","random","_useParams","useParams","storyId","_useQuery","GET_STORY_BY_ID","loading","_useLazyQuery","useLazyQuery","GET_CHAPTER_CHILDREN","_useLazyQuery2","getChildChapters","_useLazyQuery2$","childChaptersData","childChaptersLoading","_useLazyQuery3","GET_CHAPTER","_useLazyQuery4","getParentChapter","parentChapterData","useLocation","state","newNavigationStack","navigationStack","currentChapter","setCurrentChapter","setNavigationStack","window","history","replaceState","getStory","chapters","getChapter","LoadingComponent","ErrorComponent","Chapter","getChapterChildren","chaptersArray","Array","isArray","scrollTo","top","behavior","selectedChapter","find","parentChapter","lastChapter","pop","parentChapterId","getChapterId","Subtitle","genre","reads_count","coffee","href","target","rel"],"sourceRoot":""}