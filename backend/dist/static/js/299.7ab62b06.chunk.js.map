{"version":3,"file":"static/js/299.7ab62b06.chunk.js","mappings":"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","sources":["components/utilities/Error/Error.jsx","pages/home/Home.jsx"],"sourcesContent":["import React from 'react'\r\nimport { Container, Alert, Button } from 'react-bootstrap'\r\n\r\nconst ErrorComponent = ({ message, onRetry }) => {\r\n  return (\r\n    <Container className=\"mt-5\">\r\n      <Alert variant=\"danger\">\r\n        <Alert.Heading>Oh snap! An error occurred.</Alert.Heading>\r\n        <p>{message || 'Something went wrong. Please try again later.'}</p>\r\n        {onRetry && <Button variant=\"primary\" onClick={onRetry}>Retry</Button>}\r\n      </Alert>\r\n    </Container>\r\n  )\r\n}\r\n\r\nexport default ErrorComponent","import { useQuery } from '@apollo/client'\r\nimport { Carousel, Card, Button, CardGroup } from 'react-bootstrap'\r\nimport { GET_ALL_STORIES } from '../../api/queries'\r\nimport './Home.css'\r\nimport { Link } from 'react-router-dom'\r\nimport ErrorComponent from '../../components/utilities/Error'\r\nimport '../../utils/theme.css'\r\nimport { useDarkMode } from '../../context/DarkModeContext'\r\nimport { formatDistanceToNow } from 'date-fns'\r\n\r\nconst LoadingPlaceholder = () => {\r\n  return (\r\n    <div style={{ backgroundColor: '#e0e0e0', height: '100%', width: '100%' }}></div>\r\n  )\r\n}\r\n\r\nconst Home = () => {\r\n  const { isDarkMode } = useDarkMode()\r\n  const { loading, error, data } = useQuery(GET_ALL_STORIES)\r\n\r\n  if (error) return <ErrorComponent message={error.message} />\r\n\r\n  let latestStories = []\r\n  let featuredStories = []\r\n\r\n  if (data) {\r\n    const sortedByReads = [...data.getAllStories].sort((a, b) => b.read_count - a.read_count)\r\n    featuredStories = sortedByReads.slice(0, 5)\r\n\r\n    const sortedByCreatedAt = [...data.getAllStories].sort((a, b) => b.createdAt - a.createdAt)\r\n    latestStories = sortedByCreatedAt.slice(0, 9)\r\n  }\r\n\r\n  return (\r\n    <div className=\"home-container\">\r\n      <section className=\"carousel-section\">\r\n        <h2 className=\"carousel-heading\">Featured Stories</h2>\r\n        <Carousel className='carousel' controls indicators keyboard slide={false} data-bs-theme=\"dark\">\r\n          {loading ? Array(5).fill(null).map((_, index) => (\r\n            <Carousel.Item key={index}>\r\n              <LoadingPlaceholder />\r\n            </Carousel.Item>\r\n          )) : featuredStories.map((story, index) => (\r\n            <Carousel.Item key={story.id}>\r\n              <div style={{ display: 'flex', alignItems: 'center', justifyContent: 'center', height: '400px', width: '100%' }}>\r\n                <Card className=\"shadow\" style={{ textAlign: 'center', width: '80%', minHeight: '70%' }}>\r\n                  {index === 0 && <span className=\"badge badge-secondary badge-corner\">Top Story</span>}\r\n                  <Card.Body>\r\n                    <Card.Title className=\"truncate-text\">{story.title}</Card.Title>\r\n                    <Card.Text className=\"truncate-text\">{story.description}</Card.Text>\r\n                    <Card.Text>Genre: {story.genre}</Card.Text>\r\n                    <Card.Text><small className=\"text-muted\">Reads: {story.read_count}</small></Card.Text>\r\n                    <Card.Text><small className=\"text-muted\">By:<Link style={{ color: 'inherit', textDecoration: 'inherit' }} to={`/user/${story.author.id}`}>{story.author.username}</Link></small></Card.Text>\r\n                    <Link to={`/story/${story.id}`}>\r\n                      <Button variant=\"secondary\">Read Story</Button>\r\n                    </Link>\r\n                  </Card.Body>\r\n                </Card>\r\n              </div>\r\n            </Carousel.Item>\r\n          ))}\r\n        </Carousel>\r\n      </section>\r\n\r\n      <section className=\"stories-grid\">\r\n        <h2 className=\"carousel-heading\">Recent Stories</h2>\r\n        <div className=\"card-grid-container\">\r\n          <CardGroup>\r\n            {loading ? Array(9).fill(null).map((_, index) => (\r\n              <Card className=\"shadow\" key={index} style={{ margin: '15px' }}>\r\n                <LoadingPlaceholder />\r\n              </Card>\r\n            )) : latestStories.map(story => (\r\n              <Card className={`shadow ${isDarkMode ? 'dark-mode' : 'light-mode'}`} key={story.id} style={{ margin: '15px', maxWidth:'600px' }}>\r\n                <Card.Body>\r\n                  <Card.Title>{story.title}</Card.Title>\r\n                  <Card.Text>{story.description}</Card.Text>\r\n                  <Card.Text>\r\n                    <span>Genre: {story.genre}</span>\r\n                    <small className=\"text-muted\" style={{ display: 'block', marginTop: '5px' }}>\r\n                      Created {formatDistanceToNow(new Date(Number(story.createdAt)))} ago by:&nbsp;\r\n                      <Link\r\n                        style={{ color: 'inherit', textDecoration: 'inherit' }}\r\n                        to={`/user/${story.author.id}`}\r\n                      >\r\n                        {story.author.username}\r\n                      </Link>\r\n                    </small>\r\n                  </Card.Text><Link to={`/story/${story.id}`}>\r\n                    <Button variant=\"secondary\">Read Story</Button>\r\n                  </Link>\r\n                </Card.Body>\r\n              </Card>\r\n            ))}\r\n          </CardGroup>\r\n        </div>\r\n      </section>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Home"],"names":["_ref","message","onRetry","_jsx","Container","className","children","_jsxs","Alert","variant","Heading","Button","onClick","LoadingPlaceholder","style","backgroundColor","height","width","Home","isDarkMode","useDarkMode","loading","error","data","useQuery","GET_ALL_STORIES","ErrorComponent","latestStories","featuredStories","getAllStories","sort","a","b","read_count","slice","createdAt","Carousel","controls","indicators","keyboard","slide","Array","fill","map","_","index","Item","story","display","alignItems","justifyContent","Card","textAlign","minHeight","Body","Title","title","Text","description","genre","Link","color","textDecoration","to","concat","author","id","username","CardGroup","margin","maxWidth","marginTop","formatDistanceToNow","Date","Number"],"sourceRoot":""}