services:
  app:
    build:
      context: .
      dockerfile: dockerfile.dev
    working_dir: /app
    command: >
      sh -c "
        mkdir -p /app/backend/secrets &&
        if [ ! -f /app/backend/secrets/.secrets.env ]; then
          echo 'Generating secrets...';
          echo IDSECRET=$(openssl rand -hex 32) > /app/backend/secrets/.secrets.env;
          echo SECRET=$(openssl rand -hex 32) >> /app/backend/secrets/.secrets.env;
          echo CSRF_SECRET=$(openssl rand -hex 32) >> /app/backend/secrets/.secrets.env;
        else
          echo 'Using existing secrets...';
        fi;
        export $(cat /app/backend/secrets/.secrets.env | xargs);
        cat /app/backend/secrets/.secrets.env;
        until nc -z mysql 3306; do echo 'Waiting for MySQL...'; sleep 1; done;
        npm start
      "
    ports:
      - "4000:4000" # backend
      - "3000:3000" # frontend
    environment:
      DOMAIN: localhost
      URL: http://localhost:4000
      PORT: 4000
      FRONTEND_PORT: 3000
      DB_HOST: mysql
      DB_USER: your_user
      DB_PASSWORD: your_password
      DB_NAME: theplotpot
      REDIS_PASS: redis_password
      REDIS_HOST: redis
      HOST: 0.0.0.0
      CHOKIDAR_USEPOLLING: "1"
      WATCHPACK_POLLING: "true"
      CI: "false"
    volumes:
      - ./:/app
      - /app/node_modules
      - /app/backend/node_modules
      - /app/theplotpot-frontend/node_modules
    develop:
      watch:
        - action: sync
          path: ./backend
          target: /app/backend
          ignore:
            - node_modules/
        - action: sync
          path: ./theplotpot-frontend
          target: /app/theplotpot-frontend
          ignore:
            - node_modules/
        - action: restart
          path: ./package.json

    depends_on:
      - mysql
      - redis

  mysql:
    image: mysql:8
    environment:
      MYSQL_ROOT_PASSWORD: your_password
      MYSQL_DATABASE: theplotpot
      MYSQL_USER: your_user
      MYSQL_PASSWORD: your_password
    volumes:
      - mysql_data:/var/lib/mysql

  redis:
    image: redis:7
    command: ["redis-server", "--requirepass", "redis_password"]

volumes:
  mysql_data:
